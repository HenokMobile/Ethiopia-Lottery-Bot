("­ЪћхрЅђрѕГ рѕѓрѕ│рЅЦ рѕѕрѕЏрІерЅх") рІерѕЮрѕЇ  Button рѕхрѕФ рЅарѕ▒ рІѕрѕхрїЦ рІеріљрѕ▒ріЋ рЅЦрѕГ рѕўрїаріЋ ріарѕ│рІГ рѕЏрѕѕрЅх рІеріљрѕ▒ріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕ│рІГ




("­ЪЉЦрѕѕрѕўрїІрЅарІЮ") рІерѕЮрѕЇ Button рѕхрѕФ рЅарѕ▒ рІѕрѕхрїЦ ріЦріЋрІ░рІџрѕЁ рѕхрѕФ "рІерїІрЅарІЎрЅх рѕ░рІЇ рѕўрїаріЋ" рІерѕЮрѕЇ ріЦріЊ "рІФрїЇріЎрЅх рІерїѕріЋрІўрЅЦ рѕўрїаріЋ" рІерѕЮрѕЇ ріЦріЊ ріаріЋрІх Button ("­ЪЉЦріарѕЂріЋ рѕѕрѕўрїІрЅарІЮ") рІерѕЮрѕЇ Button рѕхрѕФ рѕЏрѕ│рѕ░рЅбрІФ "рІерїІрЅарІЎрЅх рѕ░рІЇ рѕўрїаріЋ" рІерѕЮрѕѕрІЇ рѕІрІГ рІѕрІГрѕЮ рЅарѕ▒ рЇЇрЅхрѕЁ ріЦрѕ▒ рІерїІрЅарІЏрЅИрІЇ рІерѕ░рІЇ рѕўрїаріЋ ріарѕ│рІГ рѕЏрѕѕрЅх рЅарѕ▒ рїЇрЅЦрІБ рІерїѕрЅАрЅх рІерѕ░рІјрЅй рѕўрїаріЋ ріарѕ│рІГ 
ріерІЏрѕЮ "рІФрїЇріЎрЅх рІерїѕріЋрІўрЅЦ рѕўрїаріЋ" рІерѕЮрѕѕрІЇ рѕІрІГ рІѕрІГріЋрѕЮ рЅарѕ▒ рЇЇрЅхрѕЁ рїІрЅЦрІъ рІФрїѕріўрІЇ рІерЅЦрѕГ рѕўрїаріЋ ріарѕ│рІГ рѕЏрѕѕрЅх рЅарїЇрЅЦрІБ рІФрїѕріўрІЇріЋ рІерЅЦрѕГ рѕўрїаріЋ ріарѕ│рІГ 
ріерІЏрѕЮ ("­ЪЉЦріарѕЂріЋ рѕѕрѕўрїІрЅарІЮ") рІерѕЮрѕЇ Button рѕІрІГ рІерѕўрїІрЅарІБ рѕЇрІЕ рЅЂрїЦрѕГ ріарѕхрЅђрѕЮрїарІЇ рІѕрІГріЋрѕЮ рІерѕўрїІрЅарІБ рѕЇрІЕ  ­ЪћЌLink ріарѕхрЅђрѕЮрїЦ ріЦріЋрІ░рІџрѕЁ рІерѕЮрѕЇ Message

 (.­ЪЉЦрѕ░рІЇріЋ рІГрїІрЅЦрІЎ ріЦріЊ рѕхрїдрЅ│­ЪјЂ рІФрїѕріЎ 
ріаріЋрІх рѕ░рІЇріЋ рѕхрїІрЅЦрІЎ 5рЅЦрѕГ рІФрїѕріЏрѕЅ  

рѕѕрѕўрїІрЅарІЮ рІГрѕЁріЋ Message Forward рЅарѕЏрІхрѕерїЇ рѕўрїІрЅарІЮ рІГрЅйрѕІрѕЅ 


"ріЦрІџрѕЁ рѕЇрІЕ рІерѕўрїІрЅарІБ Link ріарѕхрЅђрѕЮрїЦ" 


РўЮ№ИЈрѕЇріЋріЕріЋ рЅарѕўріЋріФрЅхРўЮ№ИЈРўЮ№ИЈ рІГрїЇрЅА рІГрѕИрѕѕрѕЎ ­ЪјЅ) рѕЏрѕ│рѕ░рЅбрІФ "ріЦрІџрѕЁ рѕЇрІЕ рІерѕўрїІрЅарІБ Link ріарѕхрЅђрѕЮрїЦ"  рІерѕЮрѕЇ  рЅБрЅ│ рѕІрІГ рІеріљрѕ▒ріЋ рѕЇрІЕ рІерѕўрїІрЅарІБ Link ріарѕхрЅђрѕЮрїЦ рѕЏрѕ│рѕ░рЅбрІФ рѕЮрѕГрїЦ Message рїерѕЮрѕГ рѕхрѕѕ Bot рѕЏрѕѕрЅх BotріЋ рЅарЅ░рѕўрѕѕріерЅ░ рѕЮрѕГрїЦ Message ріарѕхрЅђрѕЮрїЦ




ріаріЋрІ░рІџрѕЁ Button рѕхрѕФ ("Рђ╝№ИЈріЦрѕерІ│рЅ│") рІерѕЮрѕЇ Button рѕхрѕФ рІ░рїЇрѕъ  Command /help рѕхрѕФ рЅаButton ріЦріЊ  Command /help рЅарѕЂрѕѕрЅ▒рѕЮ рѕІрІГ ріЦріЋрІхрѕ░рѕФ ріарІхрѕГрїЇ

рІерѕўрїђрѕўрѕфрІФ Button "­Ъј░рІерѕјрЅ░рѕф ріарїЇрѕЇрїЇрѕјрЅх" рІерѕЮрѕЇ Button рѕхрѕФрЇб 
ріерІЏрѕЮ рЅарѕ▒ рІѕрѕхрїЦ рѕїрѕІ 4 Button рЅхрѕ░рѕФрѕѕ ріЦріЋрІ░рІџрѕЁ 
(1"­Ъј«рЇѕрїБрІГріЮ рїерІІрЅ│") рІерѕЮрѕЇ ріЦріЊрѕЮ 
(2"­ЪДЙрѕўрІ░рЅаріЏ рѕјрЅ░рѕф") рІерѕЮрѕЇ ріЦріЊрѕЮ
 (3"­Ъњх10 рѕ║рѕЁ рЅЦрѕГ ріЦрїБ") рІерѕЮрѕЇ ріЦріЊрѕЮ 
(4"­ЪјЂріЦрѕ░ріе 50 рѕ║рѕЁ рЅЦрѕГ рѕйрѕЇрѕЏрЅх") рІерѕЮрѕЇ рѕхрѕФ ріЦріЊрѕЮ
(5"РєЕ№ИЈрѕѕрѕўрѕўрѕѕрѕх") рІерѕЮрѕЇ рѕхрѕФрЇб
[Button 1 рѕІрІГ (1"­Ъј«рЇѕрїБрІГріЮ рїерІІрЅ│") рІерѕЮрѕѕрІЇ рѕІрІГ ріЦріЋрІ░рІџрѕЁ ріарІГріљрЅх Lottery рѕхрѕФ
 рЅарїБрѕЮ рѕЮрѕГрїЦ рІерѕєріљ ріе 10рЅЦрѕГ ріЦрѕхріе 10рѕй рЅЦрѕГ рѕЏрѕИріљрЇЇ рІерѕЮрЅйрѕѕрІЇ рІеріаріЋрІх ­ЪјФрЅхрігрЅх рІІрїІ 10рЅЦрѕГ ріарІхрѕГрїЇ рЅЦрІЎ рїЇрІю рЅхріЋрѕй рЅЦрѕГ ріЦріЋрІхрІѕрїБ ріарІхрѕГрїЇ рѕѕріћ рЅарїБрѕЮ ріарІІрїф рІерѕєріљ ріарІхрѕГрїЇрЇб]
{Button 2 рѕІрІГ (2"­ЪДЙрѕўрІ░рЅаріЏ рѕјрЅ░рѕф") рѕІрІГ ріЦріЋрІ░рІџрѕЁ ріарІхрѕГрїЇ рЅарѕ▒ рІѕрѕхрїЦ Button рѕ░рѕФ
Button 1 рѕхрѕЮ (1"­ЪјФрЅхрігрЅх рѕѕрѕўрЅЂрѕерїЦ") рІерѕЮрѕЇ ріЦріЊ Button 2 рѕхрѕЮ (2"­ЪЊІрІерІѕрїБ рЅЂрїЦрѕГ рѕѕрѕЏрІерЅх") рІерѕЮрѕЇ ріЦріЊ 
Button 3 рѕхрѕЮ (3"­ЪЉЂРђЇ­ЪЌерІеріћ рЅхрігрЅх") рІерѕЮрѕЇ ріЦріЊ 
Button 4 рѕхрѕЮ (4"РєЕ№ИЈрѕѕрѕўрѕўрѕѕрѕх") рІерѕЮрѕЇ рѕхрѕФрЇб
ріЦріЊрѕЮ Button 1 (1"­ЪјФрЅхрігрЅх рѕѕрѕўрЅЂрѕерїЦ") рІерѕЮрѕѕрІЇ рѕІрІГ ріаріЋрІ░рІџрѕЁ рѕхрѕФ "Keyboard Button" рѕхрѕФ 500 рЅхрігрЅх рѕхрѕФ рІеріаріЋрІх рЅхрігрЅх рІІрїІ 50рЅЦрѕГ ріарІхрѕГрїЇ рѕ░рІјрЅй рЅхрігрЅх ріЦріЋрІ▓рЅІрѕерїА  рІФрѕЇрЅ░рЅІрѕерїа рЅхрігрЅх ріарѕ│рІФрЅИрІЇ рІерЅ░рЅІрѕерїарІЇріЋ рІ░рѕъ рѕѕрЅєрѕерїА рѕ░рІјрЅй рЅаButton 3 (3"­ЪЉЂРђЇ­ЪЌерІеріћ рЅхрігрЅх") рѕІрІГ ріарѕ│рІГ рѕЏрѕ│рѕ░рЅбрІФ рІерЅ░рЅІрѕерїарІЇріЋ рЅхрігрЅх рѕїрѕІ рѕ░рІЇ ріарЅ│рѕ│рІГ  рІ░рїЇрѕъ 1 ріЦрѕхріе 500 рЅхрігрЅх рЅ░рЅІрѕГрїд рѕхрІФрѕЇрЅЁ рЅЂрїЦрѕГ 5рЅЂрїЦрѕГ ріарІѕрїБ 1ріЦрїБ 10рѕй рЅЦрѕГ 2 ріЦрїБ 6000 рЅЦрѕГ 3ріЦрїБ 3000 рЅЦрѕГ 
4ріЦрїБ 1000 рЅЦрѕГ  5ріЦрїБ 500 рЅЦрѕГ  ріе500 рЅЂрїЦрѕ«рЅй рІѕрѕхрїЦ рѕЇрІЕ рѕЇрІЕ 5рЅЂрїЦрѕГ ріарІѕрїБ рІерІѕрїБрІЇріЋ рЅЂрїЦрѕГ рІ░рѕъ рЅаButton 2 (2"­ЪЊІрІерІѕрїБ рЅЂрїЦрѕГ рѕѕрѕЏрІерЅх") рѕІрІГ рѕѕрѕЂрѕЅрѕЮ рЅ░рїарЅЃрѕџ ріарѕ│рІГ ріерІЏрѕЮ рѕѕрІ░рѕерѕ░рІЇ рѕ░рІЇ рІѕрІГрѕЮ рІФрѕИріљрЇѕрІЇріЋ рѕ░рІЇ рѕўрѕІріЦріГрЅх рѕІріГ "ріаріЋрі│ріЋ рІ░рѕх ріарѕЅрЅх" рІерѕЮрѕЇ ріерІЏрѕЮ рѕѕріарѕИріЊрЇі рЅЦрѕГ ріарѕхрїѕрЅБ ріЦрѕ▒ рІФрѕИріљрЇѕрІЇріЋ рІФрѕЇ рЅЦрѕГ
Button 2  (2"­ЪЊІрІерІѕрїБ рЅЂрїЦрѕГ рѕѕрѕЏрІерЅх") рІерѕЮрѕѕрІЇ рѕІрІГ рІерІѕрїБ рЅЂрїЦрѕГ ріарѕ│рІГ рѕѕрѕЂрѕЅрѕЮ рЅ░рїарЅЃрѕџрЇб рѕЏрѕ│рѕ░рЅбрІФ рЅхрігрЅх рѕ│рІФрѕЇрЅЁ ріЦріЋрІ│рІГрІѕрїБ 
Button 3 ( 3"­ЪЉЂРђЇ­ЪЌерІеріћ рЅхрігрЅх") рІерѕЮрѕѕрІЇ рѕІрІГ ріаріЋрІх рѕ░рІЇ ріерЅєрѕерїа рІерЅєрѕерїарІЇріЋ рЅхрігрЅх ріарѕ│рІГ рІерѕ▒ рЅхрігрЅх рЅЦрЅ╗ ріарѕ│рІГрЇб
Button 4 (4"РєЕ№ИЈрѕѕрѕўрѕўрѕѕрѕх") рІерѕЮрѕѕрІЇ рІеBack Button ріарІхрѕГрїЇ рѕЏрѕѕрЅх рІѕрІ░ріІрѕІ рІерѕўрѕўрѕѕрѕ╗  Button ріарІхрѕГрїЇ main рІѕрІГріЋрѕЮ рІІріЊ рїѕрЇЁ Button рїерѕЮрѕГрЇб}

[ (3"­Ъњх10рѕй рЅЦрѕГ ріЦрїБ") рІерѕЮрѕѕрІЇ Button рѕІрІГ ріЦріЋрІ░рІџрѕЁ ріарІхрѕГрїЇ Lottery ріарІГріљрЅх ріаріЋрІх рїЇрІю рІІрїІ 30рЅЦрѕГ ріарІхрѕГрїЇ ріЦріЊрѕЮ ріе700 рїЇрІю рІѕрѕхрїЦ 1рїЇрІю рЅЦрЅ╗ ріарѕИріЊрЇі ріЦріЋрІхріќрѕГ 1ріЦрїБ рЅЦрЅ╗ рІГріЉрѕГ ріе700 рїЇрІю рІѕрѕхрїЦ ріаріЋрІх рїЇрІю рЅЦрЅ╗ ріарѕИріЊрЇі рІеріЉрѕГ рІе1ріЦрїБ рІІрїІ 30рЅЦрѕГ ріљрІЇрЇб]

((4"­ЪјЂріЦрѕхріе 50рѕй рЅЦрѕГ рѕйрѕЇрѕЏрЅх") Button рѕІрІГ рІ░рїЇрѕъ ріЦріЋрІ░рІџрѕЁ ріарІхрѕГрїЇ рІеріаріЋрІх ріЦрїБ рІІрїІ 100рЅЦрѕГ рІѕрІГрѕЮ ріаріЋрІх рЅхрігрЅх рІІрїІ 100рЅЦрѕГ ріарІхрѕГрїЇ ріЦріЊрѕЮ ріЦрѕ░ріе 50рѕй рЅЦрѕГ рѕЏрѕИріљрЇЇ ріЦріЋрІхрЅйрѕЅ ріарІхрѕерїЇ ріљрїѕрѕГ рїЇріЋ рЅа100 рїЇрІю рІѕрѕхрїЦ 1рїЇрІю ріЦріЋрІхрІѕрїБ ріарІхрѕГрїЇ)


{(5"РєЕ№ИЈрѕѕрѕўрѕўрѕѕрѕх") рІерѕЮрѕЇ ButtonріЋ РєЕ№ИЈback button ріарІхрѕГрїЇ рІѕрІГріЋрѕЮ рІѕрІ░ріІрѕІ рѕўрѕўрѕѕрѕ╗ ріарІхрѕГрїЇ} 

рѕЏрѕ│рѕ░рЅбрІФ рѕЂрѕЅріЋрѕЮ рЅБрЅ│ рѕІрІГ .РєЕ№ИЈBack Button рѕхрѕФ рІѕрІГрѕЮ  .рІѕрІ░ріІрѕІ рѕўрѕўрѕѕрѕ╗ Button рѕхрѕФ рІеButton рѕхрѕЮ  "рѕѕрѕўрѕўрѕѕрѕх" рЅарѕЇ рЅарѕЂрѕЅрѕЮ рЅБрЅ│ рѕхрѕФ






рѕўрїђрѕўрѕфрІФ рѕІрІГ ріЦріЋрІ░рІџрѕЁ рІГрѕЂріЋрЇб ріарІхрѕх рѕ░рІЇ Start рѕхрѕѕ 10рЅЦрѕГ рѕхрїЦ ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ Message рѕІріГ (ріЦріЋрі│ріЋ рІ░ріЊ рѕўрїА "ріЦрІџрѕЁ рІерѕ▒ріЋ рѕхрѕЮ ріарѕхрїѕрЅБ") рЅарѕЇ рЇб
 рѕЏрѕ│рѕ░рЅбрІФ "ріЦрІџрѕЁ рІерѕ▒ріЋ рѕхрѕЮ ріарѕхрїѕрЅБ" рІерѕЮрѕѕрІЅ рЅБрЅ│ рѕІрІГ рІерЅ░рїарЅЃрѕџ Username ріарѕхрїѕрЅБрЇб

рѕЎрѕЅ message ріЦріЋрІ░рІџрѕЁ рІерѕЂріЋ ­ЪЉЄ
 (.­ЪјЅріЦріЋрі│ріЋ рІ░ріЊ рѕўрїА "ріЦрІџрѕЁ рІерЅ░рїарЅЃрѕџ рѕхрѕЮ ріарѕхрїѕрЅБ" 
рІѕрІ░ Ethiopia ­ЪЄф­ЪЄ╣ Lottery ­ЪЦЄ Bot ­Ъцќ
ріарѕЂріЋ 10рЅЦрѕГ Bonus ріарїЇріЮрЅ░рІІрѕЇ "ріЦрІџрѕЁ рІерЅ░рїарЅЃрѕџ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕ│рІГ"

.­Ъј░рІерЅ░рѕѕрІФрІЕ рѕјрЅ░рѕф ріЦріЊ рІерЅ░рѕѕрІФрІЕ рѕйрѕЇрѕЏрЅХрЅй рІФрїѕріЏрѕЅ рѕјрЅ░рѕф рѕѕрѕўрїФрІѕрЅх (­Ъј░рѕјрЅ░рѕф ріарїЇрѕЇрїЇрѕјрЅх) рІерѕЮрѕѕрІЇріЋ рІГрїФріЉ ріЦріЊ ріарѕИріЊрЇі ­ЪЈє рІГрѕЂріЉ 

.­ЪЉЦрѕ░рІЇріЋ рІГрїІрЅЦрІЎ ріЦріЊ рѕхрїдрЅ│­ЪјЂ рІФрїѕріЎ
ріаріЋрІх рѕ░рІЇріЋ рѕхрїІрЅЦрІЎ 5рЅЦрѕГ рІФрїѕріЏрѕЅ 
рѕѕрѕўрїІрЅарІЮ (­ЪЉЦрѕѕрѕўрїІрЅарІЮ) рІерѕЮрѕѕрІЇріЋ рІГрїФріЉ рІГрїІрЅЦрІЎ

.­ЪЈдрїѕрЅб рІФрІхрѕГрїЅ ріЦріЊ рІГрїФрІІрЅ▒ рІерЅ░рѕѕрІФрІЕ рѕйрѕЇрѕЏрЅХрЅй рІФрѕИріљрЇЅрЅх 
рїѕрЅб рѕѕрѕЏрІхрѕерїЇ (­ЪЈдрїѕрЅб рѕѕрѕЏрІхрѕерїЇ) рІерѕЮрѕѕрІЇріЋ рІГрїФріЉ

.­ЪЈДрїѕріЋрІўрЅЦ рѕѕрѕЏрІЇрїБрЅх (­ЪЈДрІѕрїф рѕѕрѕЏрІхрѕерїЇ) рІерѕЮрѕѕрІЇріЋ рІГрїФріЉ ріЦріЊ рІѕрїф рІФрІхрѕГрїЅ

.­ЪњхрЅђрѕГ рѕѓрѕ│рЅЦ рѕѕрѕЏрІерЅх рІѕрІГріЋрѕЮ рІФрѕЅрЅх рІерЅЦрѕГ рѕўрїаріЋ рѕѕрѕЏрІерЅх (­ЪћхрЅђрѕГ рѕѓрѕ│рЅЦ ) рІерѕЮрѕѕрІЇріЋ рІерїФріЉ


ріЦрѕГрІ│рЅ│ рІѕрІГріЋрѕЮ ріЦрїѕрІЏ ріерЇѕрѕѕрїІрЅйрѕЂ ріЦріЏріЋ рѕЏрїЇріўрЅх рІѕрІГріЋрѕЮ рІерЅ░рѕѕрІФрІЕ рІеріарїарЅЃрЅђрѕЮ ріЦрїѕрІЏ ріерЇѕрѕѕрїЅ ріЦрѕГрІ│рЅ│ рІерѕЮрѕѕрІЇріЋ рІГрїФріЉ
)

рѕЏрѕ│рѕ░рЅбрІФ рІГрѕё рѕѕріарІхрѕх рЅ░рїарЅЃрѕџ рѕѕрѕўрїђрѕўрѕфрІФ рїѕрІю рЅЦрЅ╗ рІГрІ░рѕГрѕх ріарѕЂріЋрѕЮ рѕЏрѕ│рѕ░рЅбрІФ "ріЦрІџрѕЁ рІерЅ░рїарЅЃрѕџ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕ│рІГ" рІерѕЮрѕЇрЅарЅх рЅБрЅ│ рѕІрІГ рІерѕ▒ріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІѕрІГріЋрѕЮ рЅђрѕГ рѕѓрѕ│рЅЦ ріарѕ│рІГ


Button рѕхрѕФ "рїѕрЅб рѕѕрѕЏрІхрѕерїЇ" рІерѕЮрѕЇ ріерІЏ рЅарѕ▒ рІѕрѕхрїЦ
 4 Button рѕхрѕФ
1ріЏ "рЅаTelebirr" рІерѕЮрѕЇ 
2ріЏ "рЅаCBE" рІерѕЮрѕЇ 
3ріЏ "рЅаCBEbirr" рІерѕЮрѕЇ 
4ріЏ "рЅаCard"  рІерѕЮрѕЇ
ріерІЏрѕЮ 1ріЏ "рЅаTelebirr" рІѕрѕхрїЦ  ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ "рѕЏрѕхрїѕрЅБрЅх рІерѕЮрЅхрЇѕрѕЇрїЅрЅхріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА  рІГрѕІріЕ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ

 ріерІЏрѕЮ ріЦріЋрІ▓рѕЁ рїарІГрЅЁ"рІерѕЮрЅ│рѕхрїѕрЅАрЅарЅх рѕхрѕЇріГ рЅЂрїЦрѕГ рІФрѕхрїѕрЅА  ріЦріЊ рІГрѕІріЕ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ 

ріерІЏрѕЮ ріЦріЋрІ▓рѕЁ рїарІГрЅЁ"рІеріЊріЋрЅ░ рѕЎрѕЅ рѕхрѕЮ  рІФрѕхрїѕрЅА  ріЦріЊ рІГрѕІріЕ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ text рЅЦрЅ╗ рЅЂрїЦрѕГ ріарІГрЇѕрЅђрІхрѕЮ

 ріерІЏрѕЮ рѕѕріљрѕ▒ ріЦріЋрІ░рІџрѕЁ рѕІріГ  рІеріћріЋ рІеTelebirr рЅЂрїЦрѕГ ріЦріЊ рѕхрѕЮ рѕІріГ (рЅЂрїЦрѕГ "0974363991") (рѕхрѕЮ "Henok Belayneh Bedecho") ріљрІЇ 
ріерІЏ Message ріЦріЋрІ┤рІЮ рЅарѕЇ "ріФрѕхрїѕрЅАрЅх рЅаріІрѕІ screenshot рІГрѕІріЕ ріЦріЊ рІФрѕерїІрїѕрїА" рЅарѕЇ
ріерІЏрѕЮ  рЅ│рЅй "ріарѕерїІрїЇрїЦ" рІерѕЮрѕЇ Button ріарѕхрЅђрѕЮрїЦ 
ріерІЏрѕЮ message рѕІріГ ріЦріЋрІ░рІџрѕЁ рІерѕџрѕЇ "рЅЦрѕГ рЅа 30 рІ░рЅѓрЅЃ рІЇрѕхрїЦ рЅаAccountрїѕрЅб рІГрѕєріЊрѕЇ" рЅарѕЇ

 ріерІЏрѕЮ 2ріЏ "рЅаCBE" рІѕрѕхрїЦ  ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ "рѕЏрѕхрїѕрЅБрЅх рІерѕЮрЅхрЇѕрѕЇрїЅрЅхріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА  рІГрѕІріЕ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ

 ріерІЏрѕЮ ріЦріЋрІ▓рѕЁ рїарІГрЅЁ"рІерѕЮрЅ│рѕхрїѕрЅАрЅарЅх Account рЅЂрїЦрѕГ рІФрѕхрїѕрЅА  ріЦріЊ рІГрѕІріЕ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ 

ріерІЏрѕЮ ріЦріЋрІ▓рѕЁ рїарІГрЅЁ"рІеріЊріЋрЅ░ рѕЎрѕЅ рѕхрѕЮ  рІФрѕхрїѕрЅА  ріЦріЊ рІГрѕІріЕ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ text рЅЦрЅ╗ рЅЂрїЦрѕГ ріарІГрЇѕрЅђрІхрѕЮ

 ріерІЏрѕЮ рѕѕріљрѕ▒ ріЦріЋрІ░рІџрѕЁ рѕІріГ  рІеріћріЋ рІеCBE рЅЂрїЦрѕГ ріЦріЊ рѕхрѕЮ рѕІріГ (рЅЂрїЦрѕГ "1000647265123") (рѕхрѕЮ "Henok Belayneh Bedecho") ріљрІЇ 
ріерІЏ Message ріЦріЋрІ┤рІЮ рЅарѕЇ "ріФрѕхрїѕрЅАрЅх рЅаріІрѕІ screenshot рІГрѕІріЕ ріЦріЊ рІФрѕерїІрїѕрїА" рЅарѕЇ
ріерІЏрѕЮ  рЅ│рЅй "ріарѕерїІрїЇрїЦ" рІерѕЮрѕЇ Button ріарѕхрЅђрѕЮрїЦ 
ріерІЏрѕЮ message рѕІріГ ріЦріЋрІ░рІџрѕЁ рІерѕџрѕЇ "рЅЦрѕГ рЅа 30 рІ░рЅѓрЅЃ рІЇрѕхрїЦ рЅаAccountрїѕрЅб рІГрѕєріЊрѕЇ" рЅарѕЇ

ріерІЏрѕЮ 2ріЏ "рЅаCBEbirr" рІѕрѕхрїЦ  ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ "рѕЏрѕхрїѕрЅБрЅх рІерѕЮрЅхрЇѕрѕЇрїЅрЅхріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА  рІГрѕІріЕ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ

 ріерІЏрѕЮ ріЦріЋрІ▓рѕЁ рїарІГрЅЁ"рІерѕЮрЅ│рѕхрїѕрЅАрЅарЅх рѕхрѕЇріГ рЅЂрїЦрѕГ рІФрѕхрїѕрЅА  ріЦріЊ рІГрѕІріЕ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ 

 ріерІЏрѕЮ рѕѕріљрѕ▒ ріЦріЋрІ░рІџрѕЁ рѕІріГ  рІеріћріЋ рІеCBE рЅЂрїЦрѕГ ріЦріЊ рѕхрѕЮ рѕІріГ (рЅЂрїЦрѕГ "0974363991") (рѕхрѕЮ "Henok Belayneh Bedecho") ріљрІЇ 
ріерІЏ Message ріЦріЋрІ┤рІЮ рЅарѕЇ "ріФрѕхрїѕрЅАрЅх рЅаріІрѕІ screenshot рІГрѕІріЕ ріЦріЊ рІФрѕерїІрїѕрїА" рЅарѕЇ
ріерІЏрѕЮ  рЅ│рЅй "ріарѕерїІрїЇрїЦ" рІерѕЮрѕЇ Button ріарѕхрЅђрѕЮрїЦ 
ріерІЏрѕЮ message рѕІріГ ріЦріЋрІ░рІџрѕЁ рІерѕџрѕЇ "рЅЦрѕГ рЅа 30 рІ░рЅѓрЅЃ рІЇрѕхрїЦ рЅаAccountрїѕрЅб рІГрѕєріЊрѕЇ" рЅарѕЇ


 ріерІЏрѕЮ 4ріЏ "Card" рІѕрѕхрїЦ ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ "рѕЏрѕхрїѕрЅБрЅх рІерѕЮрЅхрЇѕрѕЇрїЅрЅхріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА  рІГрѕІріЕ" рЅарѕЇ
рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ
ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ "рІерѕЮрЅ│рѕхрїѕрЅАрЅарЅх рѕхрѕЇріГ рЅЂрїЦрѕГ рІФрѕхрїѕрЅА  ріЦріЊ рІГрѕІріЕ" рЅарѕЇ
рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ

 ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ рѕѕріљрѕ▒ рѕІріГ рІеріћріЋ рІерѕхрѕЇріГ рЅЂрїЦрѕГ рѕІріГ (рЅЂрїЦрѕГ "0974363991") 
ріерІЏрѕЮ Message рѕІріГ ріЦріЋрІ┤рІЮ рЅарѕЇ "ріФрѕхрїѕрЅАрЅх рЅаріІрѕІ screenshot рІГрѕІріЕ ріЦріЊ рІФрѕерїІрїѕрїА" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ photo ріЦріЊ file  рѕўрѕІріГ рІГрЇѕрЅђрІ│рѕЇ рїЇріЋ text ріЦріЊ рЅЂрїЦрѕГ рѕўрѕІріГ ріарІГрЇѕрЅђрІхрѕЮ

  ріерІЏрѕЮ  рЅ│рЅй рѕІрІГ "ріарѕерїІрїЇрїЦ" рІерѕЮрѕЇ Button ріарѕхрЅђрѕЮрїЦ ріерІЏрѕЮ message ріарѕхрЅђрѕЮрїЦ ріЦріЋрІ░рІџрѕЁ рІерѕЮрѕЇ "рЅЦрѕГ рЅа 30 рІ░рЅѓрЅЃ рІЇрѕхрїЦ рЅаAccountрїѕрЅб рІГрѕєріЊрѕЇ" рЅарѕЇ 

рѕЏрѕ│рѕ░рЅбрІФ рЅарѕЂрѕЅрѕЮ рЅБрЅ│ рѕІрІГ "РєЕ№ИЈрѕѕрѕўрѕўрѕѕрѕх" рІерѕЮрѕЇ Button ріарѕхрЅђрѕЮрїЦ рѕЏрѕѕрЅх .Back Button рІѕрІГріЋрѕЮ .рІѕрІ░ріІрѕІ рѕўрѕўрѕѕрѕ╗ рѕЏрѕѕрЅх ріљрІЇ .рїѕрЅб рѕЏрІхрѕерїЇ рІерѕЮрЅйрѕѕрІЇ рІЮрЅЁрЅ░ріЏ рѕўрїаріЋ 50 рЅЦрѕГ ріљрІЇ рѕЏрѕ│рѕ░рЅбрІФ .рЅаcard ріерѕєріљ рІЮрЅЁрЅ░ріЏ рѕўрїаріЋ 5рЅЦрѕГ ріљрІЇ




рІѕрїф ­ЪЉЄ

.("­ЪЈДрІѕрїф рѕѕрѕЏрІхрѕерїЇ") рІерѕЮрѕЇ Button рѕ░рѕФ рЅарѕ▒рѕЮ рІѕрѕхрїЦ
 4 button рѕхрѕФ 
1 (1"рЅаTelebirr")  рІерѕЮрѕЇ
2 (2"рЅаCBE)  рІерѕЮрѕЇ
3 (3"рЅаCBEbirr) рІерѕЮрѕЇ
4 (4"рЅаCard) рІерѕЮрѕЇ
. рЅаріљрѕ▒ рѕІрІГ ріЦріЋрІ░рІџрѕЁ ріарІхрѕГрїЇ (1"рЅаTelebirr") рѕІрІГ ріЦріЋрІ░рІџрѕЁ ріарІхрѕГрїѕрІЇ 
.рѕ░рІЇрІерІЇріЋ рїарІГрЅЁ "рІФріЋрЅ░ріЋ рІеTelebirr рѕхрѕЇріГ рЅЂрїЦрѕГ рѕІріГ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ ріЦріЋрІхрІѕрѕхрІх ріарІхрѕГрїЇ рѕѕрѕЮрѕ│рѕї: ріЦріЋрІ░рІџрѕЁ +251974363991 рІѕрІГріЋрѕЮ 0974363991

.ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ  "рІФріЋрЅ░ріЋ рѕЎрѕЅ рѕхрѕЮ рѕІріГ" рЅарѕЇ
рѕЏрѕ│рѕ░рЅбрІФ рѕхрѕЮ  рЅЦрЅ╗ рЅЂрїЦрѕГ ріарІГрЇѕрЅђрІхрѕЮ рЅарѕЇ рѕѕрѕЮрѕ│рѕї: 
Henok Belayneh Bedecho ріЦріЋрІ░рІџрѕЁ

 .ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ "рІѕрїф рѕѕрѕЏрІхрѕерїЇ рІерѕЮрЅхрЇѕрѕЇрїѕрІЇріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕхрїѕрЅБ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ рѕѕрѕЮрѕ│рѕї: 500 1000 10000 ріЦріЋрІ░рІџрѕЁ

.ріерІЏрѕЮ рЅарѕўрїерѕерѕ╗рѕЮ ріЦріЋрІџрѕЁ Message рѕІріГ "рїѕріЋрІўрЅЦ рЅа30рІ░рЅѓрЅЃ рІЇрѕхрїЦ рІѕрїф рІГрІ░рѕерїІрѕЇ " рЅарѕЇ 

.Button 2 .(2"рЅаCBE") рѕІрІГ ріЦріЋрІ░рІџрѕЁ ріарІхрѕГрїѕрІЇ рѕ░рІЇрІерІЇріЋ рїарІГрЅЁ "рІФріЋрЅ░ріЋ рІеCBE Account рЅЂрїЦрѕГ рѕІріГ" рЅарѕЇ
рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ рЅЦрЅ╗ text ріарІГрЇѕрЅђрІхрѕЮ рѕѕрѕЮрѕ│рѕї: 1000647265123 ріЦріЋрІ░рІџрѕЁ

 .ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ  "рІФріЋрЅ░ріЋ рѕЎрѕЅ рѕхрѕЮ рѕІріГ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ ріарІГрЇѕрЅђрІхрѕЮ рѕѕрѕЮрѕ│рѕї: Henok Belayneh Bedecho ріЦріЋрІ░рІџрѕЁ ріарІГріљрЅх

 .ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ "рІѕрїф рѕѕрѕЏрІхрѕерїЇ рІерѕЮрЅхрЇѕрѕЇрїѕрІЇріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕхрїѕрЅБ" рЅарѕЇ  рѕЏрѕ│рѕ░рЅбрІФ text ріарІГрЇѕрЅђрІхрѕЮ рѕѕрѕЮрѕ│рѕї: 500 1000 10000 

.ріерІЏрѕЮ рЅарѕўрїерѕерѕ╗рѕЮ ріЦріЋрІџрѕЁ Message рѕІріГ "рїѕріЋрІўрЅЦ рЅа30рІ░рЅѓрЅЃ рІЇрѕхрїЦ рІѕрїф рІГрІ░рѕерїІрѕЇ " рЅарѕЇ 

.Button 3 (3"рЅаCBEbirr") рѕІрІГ ріЦріЋрІ░рІџрѕЁ ріарІхрѕГрїѕрІЇ

 .рѕ░рІЇрІерІЇріЋ рїарІГрЅЁ "рІФріЋрЅ░ріЋ рІеCBEbirr рѕхрѕЇріГ рЅЂрїЦрѕГ рѕІріГ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ text ріарІГрЇѕрЅђрІхрѕЮ рѕѕрѕЮрѕ│рѕї +251974363991  0974363991 

 .ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ  "рІФріЋрЅ░ріЋ рѕЎрѕЅ рѕхрѕЮ рѕІріГ" рЅарѕЇ
рѕЏрѕ│рѕ░рЅбрІФ рЅЂрїЦрѕГ ріарІГрЇѕрЅђрІхрѕЮ рѕѕрѕЮрѕ│рѕї: Henok Belayneh Bedecho
. ріерІЏрѕЮ ріЦріЋрІ░рІџрѕЁ рїарІГрЅЁ "рІѕрїф рѕѕрѕЏрІхрѕерїЇ рІерѕЮрЅхрЇѕрѕЇрїѕрІЇріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕхрїѕрЅБ" рЅарѕЇ рѕЏрѕ│рѕ░рЅбрІФ Text ріарІГрЇѕрЅђрІхрѕЮ рЅЂрїЦрѕГ рЅЦрЅ╗ рѕѕрѕЮрѕ│рѕї:  500 1000 10000

.ріерІЏрѕЮ рЅарѕўрїерѕерѕ╗рѕЮ ріЦріЋрІџрѕЁ Message рѕІріГ "рїѕріЋрІўрЅЦ рЅа30рІ░рЅѓрЅЃ рІЇрѕхрїЦ рІѕрїф рІГрІ░рѕерїІрѕЇ " рЅарѕЇ 

8. (1"рЅаCard") ріЦріЋрІџрѕЁ Message рѕІріГ "РЮїрІеCard ріарїЇрѕЇрїЇрѕјрЅх ріарѕЇрЅ░рїђрѕўрѕерѕЮ рЅарѕїрѕІ ріарѕЏрѕФрїГ рІѕрїф рІФрІхрѕГрїЅ"рЅарѕЇ 


­ЪЊїрѕЏрѕ│рѕ░рЅбрІФ рЅарѕЂрѕЅрѕЮ рЅБрЅ│ рѕІрІГ "РєЕ№ИЈрѕѕрѕўрѕўрѕѕрѕх" рІерѕЮрѕЇ Button ріарѕхрЅђрѕЮрїЦ рѕЏрѕѕрЅх Back Button рІѕрІГріЋрѕЮ рІѕрІ░ріІрѕІ рѕўрѕўрѕѕрѕ╗ рѕЏрѕѕрЅх ріљрІЇ рІ░рїЇрѕъ рѕЏрІѕрїБрЅх рІерѕЮрЅйрѕѕрІЇ рІЮрЅЁрЅ░ріЏ рѕўрїаріЋ 500рЅЦрѕГ рІерѕЂріЋ ріарѕЂріЋрѕЮ рѕЏрѕ│рѕ░рЅбрІФ рѕЏрІѕрїБрЅх рІерѕЮрЅйрѕѕрІЇ рІЮрЅЁрЅ░ріЏ рѕўрїаріЋ 500рЅЦрѕГ ріљрІЇ




import telebot
from telebot import types
import sqlite3
import random
import time
import traceback

# ====== Configuration ======
TOKEN = '8103310198:AAGhOrJqnAU5_2csrs5fBA47WA_Lj4zAVFM'  # Replace with your actual token
bot = telebot.TeleBot(TOKEN)
ADMIN_CHAT_ID = "7927204668"  # Replace with your admin chat ID

# Database connection
conn = sqlite3.connect('ethiowin.db', check_same_thread=False)
cur = conn.cursor()

# Create tables
cur.execute("""
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    first_name TEXT,
    last_name TEXT,
    referred_by INTEGER,
    birr INTEGER DEFAULT 0,
    join_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)
""")

cur.execute("""
CREATE TABLE IF NOT EXISTS lottery_tickets (
    ticket_id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    number INTEGER,
    purchase_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users (user_id)
)
""")

conn.commit()

# Constants
REGISTER_BONUS = 10
REFERRAL_BONUS = 5
TICKET_COST = 5
MIN_WITHDRAW = 50

# Lottery rewards - smaller amounts with better chances
lottery_rewards = {
    1: 100, 2: 80, 3: 60, 4: 50, 5: 40,
    6: 30, 7: 25, 8: 20, 9: 15, 10: 10,
    11: 8, 12: 6, 13: 5, 14: 3, 15: 2
}

# ====== Payment Handler Variables ======
PAYMENT_METHODS = {
    "telebirr": {
        "name": "рЅаTelebirr",
        "account_number": "0974363991",
        "account_name": "Henok Belayneh Bedecho",
        "steps": [
            "­Ъњ░рѕЏрѕхрїѕрЅБрЅх рІерѕЮрЅхрЇѕрѕЇрїЅрЅхріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА",
            "­ЪЊ▒рІерѕЮрЅ│рѕхрїѕрЅАрЅарЅх рѕхрѕЇріГ рЅЂрїЦрѕГ рІФрѕхрїѕрЅА",
            "­Ъњ│­ЪЉЄ­ЪЉЄ­ЪЉЄ"
        ],
        "confirmation": "ріФрѕхрїѕрЅАрЅх рЅаріІрѕІ screenshot рІГрѕІріЕ ріЦріЊ рІФрѕерїІрїѕрїА ­ЪЉЄ",
        "success_msg": "рЅа30 рІ░рЅѓрЅЃ рІЇрѕхрїЦ рЅаAccount рїѕрЅб рІГрѕєріЊрѕЇ"
    },
    "cbe": {
        "name": "рЅаCBE",
        "account_number": "1000647265123",
        "account_name": "Henok Belayneh Bedecho",
        "steps": [
            "рѕЏрѕхрїѕрЅБрЅх рІерѕЮрЅхрЇѕрѕЇрїЅрЅхріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА рІГрѕІріЕ",
            "рІерѕЮрЅ│рѕхрїѕрЅАрЅарЅх Account рЅЂрїЦрѕГ рІФрѕхрїѕрЅА ріЦріЊ рІГрѕІріЕ",
            "рІеріћріЋ рІеCBE рЅЂрїЦрѕГ ріЦріЊ рѕхрѕЮ ріарѕхрїѕрЅБ (рЅЂрїЦрѕГ '1000647265123') (рѕхрѕЮ 'Henok Belayneh Bedecho')"
        ],
        "confirmation": "ріФрѕхрїѕрЅАрЅх рЅаріІрѕІ screenshot рІГрѕІріЕ ріЦріЊ рІФрѕерїІрїѕрїА",
        "success_msg": "рЅЦрѕГ рЅа 30 рІ░рЅѓрЅЃ рІЇрѕхрїЦ рЅаAccountрїѕрЅб рІГрѕєріЊрѕЇ"
    },
    "cbebirr": {
        "name": "рЅаCBEbirr",
        "account_number": "0974363991",
        "account_name": "Henok Belayneh Bedecho",
        "steps": [
            "рѕЏрѕхрїѕрЅБрЅх рІерѕЮрЅхрЇѕрѕЇрїЅрЅхріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА рІГрѕІріЕ",
            "рІерѕЮрЅ│рѕхрїѕрЅАрЅарЅх рѕхрѕЇріГ рЅЂрїЦрѕГ рІФрѕхрїѕрЅА ріЦріЊ рІГрѕІріЕ",
            "рІеріћріЋ рІеCBEbirr рЅЂрїЦрѕГ ріЦріЊ рѕхрѕЮ ріарѕхрїѕрЅБ (рЅЂрїЦрѕГ '0974363991') (рѕхрѕЮ 'Henok Belayneh Bedecho')"
        ],
        "confirmation": "ріФрѕхрїѕрЅАрЅх рЅаріІрѕІ screenshot рІГрѕІріЕ ріЦріЊ рІФрѕерїІрїѕрїА",
        "success_msg": "рЅЦрѕГ рЅа 30 рІ░рЅѓрЅЃ рІЇрѕхрїЦ рЅаAccountрїѕрЅб рІГрѕєріЊрѕЇ"
    },
    "card": {
        "name": "рЅаCard",
        "account_number": "0974363991",
        "account_name": "Henok Belayneh Bedecho",
        "steps": [
            "рѕЏрѕхрїѕрЅБрЅх рІерѕЮрЅхрЇѕрѕЇрїЅрЅхріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА рІГрѕІріЕ",
            "рІерѕЮрЅ│рѕхрїѕрЅАрЅарЅх рѕхрѕЇріГ рЅЂрїЦрѕГ рІФрѕхрїѕрЅА ріЦріЊ рІГрѕІріЕ",
            "рІеріћріЋ рІерѕхрѕЇріГ рЅЂрїЦрѕГ ріарѕхрїѕрЅБ (рЅЂрїЦрѕГ '0974363991')"
        ],
        "confirmation": "ріФрѕхрїѕрЅАрЅх рЅаріІрѕІ screenshot рІГрѕІріЕ ріЦріЊ рІФрѕерїІрїѕрїА",
        "success_msg": "рЅЦрѕГ рЅа 30 рІ░рЅѓрЅЃ рІЇрѕхрїЦ рЅаAccountрїѕрЅб рІГрѕєріЊрѕЇ"
    }
}

# ====== Withdraw Handler Variables ======
WITHDRAW_METHODS = {
    "telebirr": {
        "name": "рЅаTelebirr",
        "steps": [
            "рІФріЋрЅ░ріЋ рІеTelebirr рѕхрѕЇріГ рЅЂрїЦрѕГ рѕІріГ",
            "рІФріЋрЅ░ріЋ рѕЎрѕЅ рѕхрѕЮ рѕІріГ",
            "рІѕрїф рѕѕрѕЏрІхрѕерїЇ рІерѕЮрЅхрЇѕрѕЇрїѕрІЇріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕхрїѕрЅБ"
        ],
        "success_msg": "рїѕріЋрІўрЅЦ рЅа30рІ░рЅѓрЅЃ рІЇрѕхрїЦ рІѕрїф рІГрІ░рѕерїІрѕЇ"
    },
    "cbe": {
        "name": "рЅаCBE",
        "steps": [
            "рІФріЋрЅ░ріЋ рІеCBE Account рЅЂрїЦрѕГ рѕІріГ",
            "рІФріЋрЅ░ріЋ рѕЎрѕЅ рѕхрѕЮ рѕІріГ",
            "рІѕрїф рѕѕрѕЏрІхрѕерїЇ рІерѕЮрЅхрЇѕрѕЇрїѕрІЇріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕхрїѕрЅБ"
        ],
        "success_msg": "рїѕріЋрІўрЅЦ рЅа30рІ░рЅѓрЅЃ рІЇрѕхрїЦ рІѕрїф рІГрІ░рѕерїІрѕЇ"
    },
    "cbebirr": {
        "name": "рЅаCBEbirr",
        "steps": [
            "рІФріЋрЅ░ріЋ рІеCBEbirr рѕхрѕЇріГ рЅЂрїЦрѕГ рѕІріГ",
            "рІФріЋрЅ░ріЋ рѕЎрѕЅ рѕхрѕЮ рѕІріГ",
            "рІѕрїф рѕѕрѕЏрІхрѕерїЇ рІерѕЮрЅхрЇѕрѕЇрїѕрІЇріЋ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ ріарѕхрїѕрЅБ"
        ],
        "success_msg": "рїѕріЋрІўрЅЦ рЅа30рІ░рЅѓрЅЃ рІЇрѕхрїЦ рІѕрїф рІГрІ░рѕерїІрѕЇ"
    },
    "card": {
        "name": "рЅаCard",
        "steps": [
            "РЮїрІеCard ріарїѕрѕЇрїЇрѕјрЅх ріарѕЇрЅ░рїђрѕўрѕерѕЮ рЅарѕїрѕІ ріарѕЏрѕФрїГ рІѕрїф рІФрІхрѕГрїЅ"
        ],
        "success_msg": ""
    }
}

# ====== Helper Functions ======
def get_balance(user_id):
    cur.execute("SELECT birr FROM users WHERE user_id=?", (user_id,))
    result = cur.fetchone()
    return result[0] if result else 0

def create_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = [
        types.KeyboardButton("­Ъњ░ рЅђрѕф рѕѓрѕ│рЅЦ"),
        types.KeyboardButton("­ЪјФ рѕјрЅ░рѕф рІГрїФрІѕрЅ▒"), 
        types.KeyboardButton("­ЪЉЦ рІФрїІрЅА рЅЦрѕГ рІФрїЇріЎ"),
        types.KeyboardButton("­ЪЈД рЅЦрѕГ рѕЏрІЇрїБрЅх"),
        types.KeyboardButton("Рё╣№ИЈ ріЦрѕГрІ│рЅ│"),
        types.KeyboardButton("рїЇрЅЦ рѕІрІхрѕГрїЇ")
    ]
    markup.add(*buttons)
    return markup

def log_activity(user_id, action):
    print(f"[LOG] User {user_id} {action} at {time.strftime('%Y-%m-%d %H:%M:%S')}")

# ====== Main Bot Handlers ======
@bot.message_handler(commands=['start'])
def start_command(message):
    try:
        user_id = message.from_user.id
        username = message.from_user.username or "Unknown"
        first_name = message.from_user.first_name or ""
        last_name = message.from_user.last_name or ""
        
        # Check if user exists
        cur.execute("SELECT user_id FROM users WHERE user_id=?", (user_id,))
        if not cur.fetchone():
            # Check for referral
            referred_by = None
            if len(message.text.split()) > 1:
                try:
                    referred_by = int(message.text.split()[1])
                except ValueError:
                    pass
            
            # Add new user
            cur.execute(
                "INSERT INTO users (user_id, username, first_name, last_name, referred_by, birr) VALUES (?, ?, ?, ?, ?, ?)",
                (user_id, username, first_name, last_name, referred_by, REGISTER_BONUS)
            )
            
            # Give referral bonus
            if referred_by:
                cur.execute("UPDATE users SET birr = birr + ? WHERE user_id = ?", (REFERRAL_BONUS, referred_by))
            
            conn.commit()
            log_activity(user_id, "registered")
            
            welcome_msg = f"­ЪјЅ ріЦріЋрі│ріЋ рІ░рѕЁріЊ рѕўрїБрѕЁ {first_name}!\n\n" \
                         f"­ЪјЂ рІерѕўрѕўрІЮрїѕрЅбрІФ рЅдріљрѕх: {REGISTER_BONUS} рЅЦрѕГ\n" \
                         f"­Ъњ░ рІеріЦрѕГрѕхрІј рЅђрѕф рѕѓрѕ│рЅЦ: {REGISTER_BONUS} рЅЦрѕГ"
        else:
            balance = get_balance(user_id)
            welcome_msg = f"­ЪЉІ ріЦріЋрІ░рїѕріЊ ріЦріЋрі│ріЋ рІ░рѕЁріЊ рѕўрїБрѕЁ {first_name}!\n" \
                         f"­Ъњ░ рІеріЦрѕГрѕхрІј рЅђрѕф рѕѓрѕ│рЅЦ: {balance} рЅЦрѕГ"
        
        bot.send_message(message.chat.id, welcome_msg, reply_markup=create_keyboard())
        
    except Exception as e:
        print(f"Error in start command: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

@bot.message_handler(func=lambda message: message.text == "­Ъњ░ рЅђрѕф рѕѓрѕ│рЅЦ")
def check_balance(message):
    try:
        balance = get_balance(message.from_user.id)
        bot.send_message(message.chat.id, f"­Ъњ░ рІеріЦрѕГрѕхрІј рЅђрѕф рѕѓрѕ│рЅЦ: {balance} рЅЦрѕГ")
        log_activity(message.from_user.id, "checked balance")
    except Exception as e:
        print(f"Error in balance check: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

@bot.message_handler(func=lambda message: message.text == "­ЪјФ рѕјрЅ░рѕф рІГрїФрІѕрЅ▒")
def play_lottery(message):
    try:
        user_id = message.from_user.id
        balance = get_balance(user_id)
        
        if balance < TICKET_COST:
            bot.send_message(
                message.chat.id,
                f"­Ъћ┤ рЅарЅѓ рїѕріЋрІўрЅЦ рІерѕѕрІјрЅхрѕЮ!\n"
                f"рІерЅхрігрЅх рІІрїІ: {TICKET_COST} рЅЦрѕГ\n"
                f"рІеріЦрѕГрѕхрІј рЅђрѕф рѕѓрѕ│рЅЦ: {balance} рЅЦрѕГ"
            )
            return
        
        # Deduct ticket cost
        new_balance = balance - TICKET_COST
        cur.execute("UPDATE users SET birr = ? WHERE user_id = ?", (new_balance, user_id))
        
        # Generate lottery number - better chances with 1-10 range
        lottery_number = random.randint(1, 10)
        reward = lottery_rewards[lottery_number]
        
        # Add ticket to database
        cur.execute(
            "INSERT INTO lottery_tickets (user_id, number) VALUES (?, ?)",
            (user_id, lottery_number)
        )
        
        # Add reward to balance
        final_balance = new_balance + reward
        cur.execute("UPDATE users SET birr = ? WHERE user_id = ?", (final_balance, user_id))
        conn.commit()
        
        result_msg = f"­ЪјФ рІерѕјрЅ░рѕф рЅхрігрЅхрІј: #{lottery_number}\n\n"
        if reward > 0:
            result_msg += f"­ЪјЅ ріЦріЋрі│ріЋ рІ░рѕх ріарѕѕрІјрЅх! {reward} рЅЦрѕГ ріарѕИріЋрЇѕрІІрѕЇ!\n"
        else:
            result_msg += "­Ъўћ рЅарІџрѕЁ рїірІю ріарѕЇрЅ░рІўріљрЇЅрѕЮрЇБ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ!\n"
        
        result_msg += f"­Ъњ░ ріарІ▓рѕх рЅђрѕф рѕѓрѕ│рЅЦ: {final_balance} рЅЦрѕГ"
        
        bot.send_message(message.chat.id, result_msg)
        log_activity(user_id, f"played lottery, got {lottery_number}, won {reward}")
        
    except Exception as e:
        print(f"Error in lottery: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

@bot.message_handler(func=lambda message: message.text == "­ЪЉЦ рІФрїІрЅА рЅЦрѕГ рІФрїЇріЎ")
def referral_info(message):
    try:
        user_id = message.from_user.id
        referral_link = f"https://t.me/{bot.get_me().username}?start={user_id}"
        
        # Count referrals
        cur.execute("SELECT COUNT(*) FROM users WHERE referred_by = ?", (user_id,))
        referral_count = cur.fetchone()[0]
        
        msg = f"­ЪЉЦ рІерїЊрІ░ріърЅй рїЇрЅЦрІБ\n\n" \
              f"­ЪћЌ рІеріЦрѕГрѕхрІј рїЇрЅЦрІБ рѕіріЋріГ:\n{referral_link}\n\n" \
              f"­Ъњ░ рѕѕріЦрІФріЋрІ│ріЋрІ▒ рїЊрІ░ріЏ: {REFERRAL_BONUS} рЅЦрѕГ\n" \
              f"­ЪЉЦ рІФрїІрЅарІІрЅИрІЇ рїЊрІ░ріърЅй: {referral_count}\n" \
              f"­Ъњх ріерїЇрЅЦрІБ рІерЅ░рїѕріў рїѕрЅб: {referral_count * REFERRAL_BONUS} рЅЦрѕГ"
        
        bot.send_message(message.chat.id, msg)
        log_activity(user_id, "viewed referral info")
        
    except Exception as e:
        print(f"Error in referral info: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

@bot.message_handler(func=lambda message: message.text == "Рё╣№ИЈ ріЦрѕГрІ│рЅ│")
def help_info(message):
    try:
        help_text = """
Рё╣№ИЈ ріЦрѕГрІ│рЅ│ ріЦріЊ рѕўрѕерїЃ

­ЪјФ рѕјрЅ░рѕф рѕўрїФрІѕрЅх:
Рђб рІерЅхрігрЅх рІІрїІ: 5 рЅЦрѕГ
Рђб рІерѕўрїђрѕўрѕфрІФ рѕйрѕЇрѕЏрЅх: 100 рЅЦрѕГ
Рђб 10 рІерЅ░рѕѕрІФрІЕ рѕйрѕЇрѕЏрЅХрЅй
Рђб ріерЇЇрЅ░ріЏ рІерѕЏрѕИріљрЇЇ ріЦрІхрѕЇ!

­Ъњ░ рїЇрЅЦ рѕЏрІхрѕерїЇ:
Рђб Telebirr, CBE, CBEbirr, Card

­ЪЈД рїѕріЋрІўрЅЦ рѕЏрІЇрїБрЅх:
Рђб рІЮрЅЁрЅ░ріЏ рѕўрїаріЋ: 50 рЅЦрѕГ
Рђб рѕЂрѕЅрѕЮ рІерїЇрЅЦ рІўрІ┤рІјрЅй рІГрІ░рїѕрЇІрѕЅ

­ЪЉЦ рїЊрІ░ріърЅйріЋ рѕЏрїІрЅарЅх:
Рђб рѕѕріЦрІФріЋрІ│ріЋрІ▒ рїЊрІ░ріЏ 5 рЅЦрѕГ
Рђб рїѕрІ░рЅЦ рІерѕѕрІЇрѕЮ

­ЪЊъ рІхрїІрЇЇ: @admin_username
        """
        bot.send_message(message.chat.id, help_text)
        log_activity(message.from_user.id, "viewed help")
        
    except Exception as e:
        print(f"Error in help: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

# ====== Admin Commands ======
@bot.message_handler(commands=['admin'])
def admin_panel(message):
    try:
        if str(message.from_user.id) != ADMIN_CHAT_ID:
            bot.send_message(message.chat.id, "­Ъћ┤ рІерІџрѕЁ рЅхрІЋрІЏрІЮ рЇЇрЅЃрІх рІерѕѕрІјрЅхрѕЮ!")
            return
            
        markup = types.InlineKeyboardMarkup()
        buttons = [
            types.InlineKeyboardButton("­ЪЊі рѕхрЅ│рЅ▓рѕхрЅ▓ріГрѕх", callback_data="admin_stats"),
            types.InlineKeyboardButton("­ЪЉЦ рЅ░рїарЅЃрѕџрІјрЅй", callback_data="admin_users"),
            types.InlineKeyboardButton("­Ъњ░ рѕѓрѕ│рЅЦ рѕЏрѕхрЅ░рІ│рІ░рѕГ", callback_data="admin_balance"),
            types.InlineKeyboardButton("­ЪЊб рѕўрѕЇріЦріГрЅх рѕІріГ", callback_data="admin_broadcast")
        ]
        for btn in buttons:
            markup.add(btn)
            
        bot.send_message(message.chat.id, "­ЪћД Admin Panel", reply_markup=markup)
        
    except Exception as e:
        print(f"Error in admin panel: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇ")

@bot.callback_query_handler(func=lambda call: call.data.startswith('admin_'))
def handle_admin_actions(call):
    try:
        if str(call.from_user.id) != ADMIN_CHAT_ID:
            bot.answer_callback_query(call.id, "­Ъћ┤ рЇЇрЅЃрІх рІерѕѕрІјрЅхрѕЮ!")
            return
            
        action = call.data.split('_')[1]
        
        if action == 'stats':
            cur.execute("SELECT COUNT(*) FROM users")
            total_users = cur.fetchone()[0]
            
            cur.execute("SELECT COUNT(*) FROM lottery_tickets")
            total_tickets = cur.fetchone()[0]
            
            cur.execute("SELECT SUM(birr) FROM users")
            total_balance = cur.fetchone()[0] or 0
            
            stats_msg = f"""
­ЪЊі рІеBot рѕхрЅ│рЅ▓рѕхрЅ▓ріГрѕх:

­ЪЉЦ рїарЅЁрѕІрѕІ рЅ░рїарЅЃрѕџрІјрЅй: {total_users}
­ЪјФ рІерЅ░рѕИрїА рЅхрігрЅХрЅй: {total_tickets}
­Ъњ░ рїарЅЁрѕІрѕІ рѕѓрѕ│рЅЦ: {total_balance} рЅЦрѕГ
            """
            bot.send_message(call.message.chat.id, stats_msg)
            
        elif action == 'users':
            cur.execute("SELECT user_id, first_name, birr FROM users ORDER BY birr DESC LIMIT 10")
            top_users = cur.fetchall()
            
            users_msg = "­ЪЉЦ ріерЇЇрЅ░ріЏ рЅ░рїарЅЃрѕџрІјрЅй:\n\n"
            for i, (user_id, name, balance) in enumerate(top_users, 1):
                users_msg += f"{i}. {name} - {balance} рЅЦрѕГ\n"
                
            bot.send_message(call.message.chat.id, users_msg)
            
        elif action == 'balance':
            msg = bot.send_message(call.message.chat.id, "­Ъњ░ рЅ░рїарЅЃрѕџ ID рІФрѕхрїѕрЅА:")
            bot.register_next_step_handler(msg, admin_balance_management)
            
        elif action == 'broadcast':
            msg = bot.send_message(call.message.chat.id, "­ЪЊб рѕѕрѕЂрѕЅрѕЮ рЅ░рїарЅЃрѕџрІјрЅй рІерѕџрѕІріерІЇріЋ рѕўрѕЇріЦріГрЅх рІФрѕхрїѕрЅА:")
            bot.register_next_step_handler(msg, admin_broadcast_message)
            
        bot.answer_callback_query(call.id)
        
    except Exception as e:
        print(f"Error in admin actions: {e}")
        bot.answer_callback_query(call.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇ")

def admin_balance_management(message):
    try:
        user_id = int(message.text)
        
        cur.execute("SELECT first_name, birr FROM users WHERE user_id = ?", (user_id,))
        user_data = cur.fetchone()
        
        if not user_data:
            bot.send_message(message.chat.id, "­Ъћ┤ рЅ░рїарЅЃрѕџ ріарѕЇрЅ░рїѕріўрѕЮ!")
            return
            
        name, balance = user_data
        
        markup = types.InlineKeyboardMarkup()
        buttons = [
            types.InlineKeyboardButton("РъЋ рѕѓрѕ│рЅЦ рїерѕЮрѕГ", callback_data=f"add_balance_{user_id}"),
            types.InlineKeyboardButton("Ръќ рѕѓрѕ│рЅЦ рЅђріЋрѕх", callback_data=f"sub_balance_{user_id}")
        ]
        for btn in buttons:
            markup.add(btn)
            
        bot.send_message(
            message.chat.id, 
            f"­ЪЉц {name}\n­Ъњ░ рЅђрѕф рѕѓрѕ│рЅЦ: {balance} рЅЦрѕГ",
            reply_markup=markup
        )
        
    except ValueError:
        bot.send_message(message.chat.id, "­Ъћ┤ рЅхріГріГрѕѕріЏ рЅ░рїарЅЃрѕџ ID рІФрѕхрїѕрЅА!")
    except Exception as e:
        print(f"Error in balance management: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇ")

def admin_broadcast_message(message):
    try:
        broadcast_msg = message.text
        
        cur.execute("SELECT user_id FROM users")
        all_users = cur.fetchall()
        
        sent_count = 0
        for (user_id,) in all_users:
            try:
                bot.send_message(user_id, f"­ЪЊб {broadcast_msg}")
                sent_count += 1
            except:
                pass
                
        bot.send_message(message.chat.id, f"РюЁ рѕўрѕЇріЦріГрЅх рѕѕ {sent_count} рЅ░рїарЅЃрѕџрІјрЅй рЅ░рѕЇрі│рѕЇ")
        
    except Exception as e:
        print(f"Error in broadcast: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇ")

@bot.callback_query_handler(func=lambda call: call.data.startswith('add_balance_') or call.data.startswith('sub_balance_'))
def handle_balance_change(call):
    try:
        if str(call.from_user.id) != ADMIN_CHAT_ID:
            bot.answer_callback_query(call.id, "­Ъћ┤ рЇЇрЅЃрІх рІерѕѕрІјрЅхрѕЮ!")
            return
            
        action, user_id = call.data.split('_', 2)[0], call.data.split('_', 2)[2]
        
        msg = bot.send_message(
            call.message.chat.id, 
            f"­Ъњ░ рѕўрїаріЋ рІФрѕхрїѕрЅА ({'рѕѕрѕўрїерѕўрѕГ' if action == 'add' else 'рѕѕрѕўрЅђріљрѕх'}):"
        )
        bot.register_next_step_handler(msg, process_balance_change, action, user_id)
        bot.answer_callback_query(call.id)
        
    except Exception as e:
        print(f"Error in balance change: {e}")
        bot.answer_callback_query(call.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇ")

def process_balance_change(message, action, user_id):
    try:
        amount = float(message.text)
        
        if action == 'add':
            cur.execute("UPDATE users SET birr = birr + ? WHERE user_id = ?", (amount, user_id))
            action_text = "рЅ░рїерѕЮрѕ»рѕЇ"
        else:
            cur.execute("UPDATE users SET birr = birr - ? WHERE user_id = ?", (amount, user_id))
            action_text = "рЅђріЋрѕирѕЇ"
            
        conn.commit()
        
        cur.execute("SELECT birr FROM users WHERE user_id = ?", (user_id,))
        new_balance = cur.fetchone()[0]
        
        bot.send_message(
            message.chat.id, 
            f"РюЁ {amount} рЅЦрѕГ {action_text}\n­Ъњ░ ріарІ▓рѕх рЅђрѕф рѕѓрѕ│рЅЦ: {new_balance} рЅЦрѕГ"
        )
        
    except ValueError:
        bot.send_message(message.chat.id, "­Ъћ┤ рЅхріГріГрѕѕріЏ рЅЂрїЦрѕГ рІФрѕхрїѕрЅА!")
    except Exception as e:
        print(f"Error in processing balance change: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇ")

# ====== Payment Handlers ======
@bot.message_handler(func=lambda message: message.text == "рїЇрЅЦ рѕІрІхрѕГрїЇ")
def handle_payment_start(message):
    try:
        markup = types.InlineKeyboardMarkup()
        for method in PAYMENT_METHODS:
            btn = types.InlineKeyboardButton(
                PAYMENT_METHODS[method]["name"],
                callback_data=f"payment_{method}"
            )
            markup.add(btn)

        bot.send_message(
            message.chat.id,
            "­ЪЉЄ рІерїЇрЅЦ рѕЏрІхрѕерїірІФ рІўрІ┤ рІГрѕЮрѕерїА",
            reply_markup=markup
        )
    except Exception as e:
        print(f"Error in payment start: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

@bot.callback_query_handler(func=lambda call: call.data.startswith('payment_'))
def handle_payment_method(call):
    try:
        method = call.data.split('_')[1]
        user_data = PAYMENT_METHODS[method]

        bot.answer_callback_query(call.id, f"рІе{user_data['name']} рІўрІ┤ рЅ░рѕўрѕГрїДрѕЇ")

        msg = bot.send_message(
            call.message.chat.id,
            f"­Ъћ╣ {user_data['steps'][0]}"
        )

        bot.register_next_step_handler(msg, process_payment_amount, method, 1)

    except Exception as e:
        print(f"Error in payment method: {e}")
        bot.send_message(call.message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

def process_payment_amount(message, method, step):
    try:
        try:
            amount = float(message.text)
            if amount <= 0:
                raise ValueError
        except ValueError:
            bot.send_message(message.chat.id, "­Ъћ┤ рЅхріГріГрѕѕріЏ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА!")
            return

        user_data = PAYMENT_METHODS[method]
        msg = bot.send_message(
            message.chat.id,
            f"­Ъћ╣ {user_data['steps'][1]}"
        )
        bot.register_next_step_handler(msg, process_payment_details, method, 2, amount)

    except Exception as e:
        print(f"Error in payment amount: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

def process_payment_details(message, method, step, amount):
    try:
        user_data = PAYMENT_METHODS[method]

        account_info = f"рЅЂрїЦрѕГ: {user_data['account_number']}"
        if 'account_name' in user_data:
            account_info += f"\nрѕхрѕЮ: {user_data['account_name']}"

        confirmation_msg = (
            f"­Ъћ╣ {user_data['steps'][2]}\n\n"
            f"­Ъњ│ рІерїЇрЅЦ рѕЏрІхрѕерїірІФ рІЮрѕГрІЮрѕГ:\n"
            f"Рђб рѕўрїаріЋ: {amount} рЅЦрѕГ\n"
            f"Рђб рІўрІ┤: {user_data['name']}\n"
            f"Рђб {account_info}\n\n"
            f"{user_data['confirmation']}"
        )

        markup = types.InlineKeyboardMarkup()
        confirm_btn = types.InlineKeyboardButton(
            "ріарѕерїІрїЇрїЦ",
            callback_data=f"confirm_{method}_{amount}"
        )
        markup.add(confirm_btn)

        bot.send_message(
            message.chat.id,
            confirmation_msg,
            reply_markup=markup
        )

    except Exception as e:
        print(f"Error in payment details: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

@bot.callback_query_handler(func=lambda call: call.data.startswith('confirm_'))
def handle_payment_confirmation(call):
    try:
        _, method, amount = call.data.split('_')
        user_data = PAYMENT_METHODS[method]

        bot.answer_callback_query(call.id, "РюЁ рІерїЇрЅЦ рѕЏрІхрѕерїірІФ рЅ░рѕўрІЮрїЇрЅДрѕЇ")

        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=f"РюЁ {user_data['success_msg']}\n\n"
                 f"Рђб рѕўрїаріЋ: {amount} рЅЦрѕГ\n"
                 f"Рђб рІўрІ┤: {user_data['name']}"
        )

    except Exception as e:
        print(f"Error in payment confirmation: {e}")
        bot.send_message(call.message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

# ====== Withdraw Handlers ======
@bot.message_handler(func=lambda message: message.text == "­ЪЈД рЅЦрѕГ рѕЏрІЇрїБрЅх")
def handle_withdraw_start(message):
    try:
        user_balance = get_balance(message.from_user.id)
        if user_balance < MIN_WITHDRAW:
            bot.send_message(
                message.chat.id,
                f"­Ъћ┤ рІЮрЅЁрЅ░ріЏ рІерѕЏрІЇрїБрЅх рѕўрїаріЋ {MIN_WITHDRAW} рЅЦрѕГ ріљрІЇ!\n"
                f"рІеріЦрѕГрѕхрІј рЅђрѕф рѕѓрѕ│рЅЦ: {user_balance} рЅЦрѕГ"
            )
            return

        markup = types.InlineKeyboardMarkup()
        for method in WITHDRAW_METHODS:
            btn = types.InlineKeyboardButton(
                WITHDRAW_METHODS[method]["name"],
                callback_data=f"withdraw_{method}"
            )
            markup.add(btn)

        bot.send_message(
            message.chat.id,
            "­ЪЉЄ рІерІѕрїф рІўрІ┤ рІГрѕЮрѕерїА",
            reply_markup=markup
        )
    except Exception as e:
        print(f"Error in withdraw start: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

@bot.callback_query_handler(func=lambda call: call.data.startswith('withdraw_'))
def handle_withdraw_method(call):
    try:
        method = call.data.split('_')[1]
        withdraw_data = WITHDRAW_METHODS[method]

        if method == "card":
            bot.send_message(call.message.chat.id, withdraw_data["steps"][0])
            return

        bot.answer_callback_query(call.id, f"рІе{withdraw_data['name']} рІўрІ┤ рЅ░рѕўрѕГрїДрѕЇ")

        msg = bot.send_message(
            call.message.chat.id,
            f"­Ъћ╣ {withdraw_data['steps'][0]}"
        )

        bot.register_next_step_handler(msg, process_withdraw_step, method, 1)

    except Exception as e:
        print(f"Error in withdraw method: {e}")
        bot.send_message(call.message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

def process_withdraw_step(message, method, step):
    try:
        withdraw_data = WITHDRAW_METHODS[method]

        if step < len(withdraw_data["steps"])-1:
            msg = bot.send_message(
                message.chat.id,
                f"­Ъћ╣ {withdraw_data['steps'][step]}"
            )
            bot.register_next_step_handler(msg, process_withdraw_step, method, step+1)
        else:
            try:
                amount = float(message.text)
                user_balance = get_balance(message.from_user.id)

                if amount > user_balance:
                    bot.send_message(
                        message.chat.id,
                        f"­Ъћ┤ рЅарЅѓ рїѕріЋрІўрЅЦ рІерѕѕрІјрЅхрѕЮ!\n"
                        f"рІеріЦрѕГрѕхрІј рЅђрѕф рѕѓрѕ│рЅЦ: {user_balance} рЅЦрѕГ"
                    )
                    return

                if amount < MIN_WITHDRAW:
                    bot.send_message(
                        message.chat.id,
                        f"­Ъћ┤ рІЮрЅЁрЅ░ріЏ рІерѕЏрІЇрїБрЅх рѕўрїаріЋ {MIN_WITHDRAW} рЅЦрѕГ ріљрІЇ!"
                    )
                    return

                # Deduct balance
                new_balance = user_balance - amount
                cur.execute(
                    "UPDATE users SET birr = ? WHERE user_id = ?",
                    (new_balance, message.from_user.id)
                )
                conn.commit()

                # Notify admin
                admin_msg = (
                    f"­Ъћё ріарІ▓рѕх рІерІѕрїф рїЦрІФрЅё!\n"
                    f"Рђб рЅ░рїарЅЃрѕџ: {message.from_user.first_name} (@{message.from_user.username})\n"
                    f"Рђб рѕўрїаріЋ: {amount} рЅЦрѕГ\n"
                    f"Рђб рІўрІ┤: {withdraw_data['name']}\n"
                    f"Рђб рІерЅ░рїарЅЃрѕџ ID: {message.from_user.id}\n"
                    f"Рђб ріарІ▓рѕх рЅђрѕф рѕѓрѕ│рЅЦ: {new_balance} рЅЦрѕГ"
                )

                bot.send_message(
                    message.chat.id,
                    f"РюЁ {withdraw_data['success_msg']}\n"
                    f"Рђб рѕўрїаріЋ: {amount} рЅЦрѕГ\n"
                    f"Рђб рІўрІ┤: {withdraw_data['name']}"
                )

                bot.send_message(ADMIN_CHAT_ID, admin_msg)

            except ValueError:
                bot.send_message(message.chat.id, "­Ъћ┤ рЅхріГріГрѕѕріЏ рІерїѕріЋрІўрЅЦ рѕўрїаріЋ рІФрѕхрїѕрЅА!")

    except Exception as e:
        print(f"Error in withdraw process: {e}")
        bot.send_message(message.chat.id, "­Ъћ┤ рѕхрѕЁрЅ░рЅх рЅ░ріерѕхрЅирѕЇрЇБ ріЦрЅБріГрІј рЅєрІГрЅ░рІЇ ріЦріЋрІ░рїѕріЊ рІГрѕъріГрѕЕ")

# ====== Run Bot ======
if __name__ == '__main__':
    print("­Ъцќ Bot is starting...")
    try:
        bot.polling(none_stop=True, interval=3, timeout=30)
    except Exception as e:
        print(f"­Ъћ┤ Bot stopped with error: {e}")
        traceback.print_exc()
    finally:
        conn.close()
        print("­Ъћ┤ Bot has stopped")
